services:
  # SQL database
  postgres:
    image: postgres:16.4
    container_name: postgres_social
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Front-end
  www:
    image: reactive-social/www
    build:
      context: ./www
      dockerfile: Dockerfile
    # container_name: social_client
    volumes:
      - ./www:/app

  # Web application
  web:
    image: reactive-social/web-service
    build:
      context: ./web_service
      dockerfile: Dockerfile
    # container_name: soicial_backend
    volumes:
      - ./web_service:/app
    depends_on:
      - postgres
    environment:
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_EMAIL: admin@admin.com
      DJANGO_SUPERUSER_PASSWORD: admin
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py createsuperuser --noinput
             python manage.py runserver 0.0.0.0:3031"

  # Reverse proxy
  haproxy:
    image: haproxy:3.0-alpine3.20
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./certs/:/etc/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - www
      - web

  # Reactive cache
  reactive_cache:
    image: reactive-social/skip-service
    build: ./reactive_service
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
    depends_on:
      - postgres

volumes:
  postgres_data:
